[pre-commit]
    parallel = true

[pre-commit.commands.format]
    glob = "*.py"
    name = "lint, fix, and format the code"
    run = "uv run --frozen ruff check --fix {staged_files} && uv run --frozen ruff format {staged_files}"
    tags = ["lint", "format", "python"]

[pre-commit.commands.lint_types]
    glob = "*.py"
    name = "check static types"
    run = "uv run --frozen mypy {staged_files}"
    tags = ["lint", "python"]

[pre-commit.commands.dockerlint]
    glob = "Containerfile*"
    name = "run hadolint"
    run = "podman run --rm --interactive hadolint/hadolint hadolint --ignore SC1091 - < {staged_files}"
    tags = ["lint", "containerfile"]

[pre-commit.commands.shellcheck]
    glob = "./scripts/*"
    name = "run shellcheck"
    run = "uv run shellcheck {staged_files}"
    tags = ["lint", "shell"]


[pre-commit.commands.lint_contracts]
    skip = true  # TODO: deal lint fails. possibly a bug in deal ?
    exclude = ["tests/*"]
    glob = "*.py"
    name = "lint contracts in code"
    run = "uv run --frozen python3 -m deal lint {staged_files}"

[pre-commit.commands.legacy]
    follow = true
    run = "uv run --frozen pre-commit run --show-diff-on-failure --files {staged_files}"

[post-merge]
    parallel = true

[post-merge.commands.sync_venv]
    glob = "uv.lock"
    run = "uv sync --frozen"
